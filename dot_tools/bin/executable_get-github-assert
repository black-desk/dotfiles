#!/bin/bash

# Thanks:
# getopt tutorial: https://stackoverflow.com/questions/16483119/an-example-of-how-to-use-getopts-in-bash/52674277#52674277
# github api:      https://github.com/wszqkzqk/deepin-wine-ubuntu/blob/f195b0a362c9fb41251fec341a4ca6d3357f589c/online_install.sh#L4

showHelp() {
# `cat << EOF` This means that cat should stop reading when EOF is detected
cat << EOF
Usage: get-github-assert -t tag-name -r regex owner/repo
get github releases assert, not contain source tar file

-h, -help,  --help  Display this help

-t, -tag,   --tag   Specificate tag of release, if not use the latest release

-r, -regex, --regex RegExp to select assert by name
EOF
# EOF is found above and hence cat command stops reading. This is equivalent to echo but much neater when printing out.
}

# $@ is all command line parameters passed to the script.
# -o is for short options like -v
# -l is for long options with double dash like --version
# the comma separates different long options
# -a is for long options with single dash like -version
options=$(getopt -l "help,tag:,regex:" -o "ht:r:" -a -- "$@")

# set --:
# If no arguments follow this option, then the positional parameters are unset. Otherwise, the positional parameters 
# are set to the arguments, even if some of them begin with a ‘-’.
eval set -- "$options"

while true
do
case $1 in
-h|--help) 
    showHelp
    exit 0
    ;;
-t|--tag) 
    shift
    tag=$1
    ;;
-r|--regex)
    shift
    regex=$1
    ;;
--)
    shift
    break;;
esac
shift
done

if [[ -z $1 ]] ; then
  echo please specify a repo
  exit -1
fi
repo=$1
if [[ -n $tag ]] ; then
  tag=tags/$tag
else
  tag=latest
fi

RELEASE_ASSERTS_URL="$(wget -qO- -T10 --tries=10 --retry-connrefused https://api.github.com/repos/$repo/releases/$tag | grep browser_download_url.\*$regex | cut -d '"' -f 4)"

if [[ -z $RELEASE_ASSERTS_URL ]] ; then
  echo no such assert
  exit -1
fi

retry -t 5 -- wget $RELEASE_ASSERTS_URL
