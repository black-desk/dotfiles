#!/bin/env zsh

# If this shell is launching in a tty,
# I use fbterm to get UTF-8 character work.
[[ $(tty) == \/dev\/tty[0-6]* ]] &&
        command -v fbterm &>/dev/null &&
                fbterm -s 18 -n "MesloLGS NF" &&
                        exit

# If this shell is a ssh shell,
# I automatically start a tmux session `ssh`.
# But if the TERM_PROGRAM is WezTerm,
# I use the tabs of WezTerm instead of tmux to get tabs.
if [[ "$TERM_PROGRAM" != "WezTerm" ]] &&
        [[ -n "$PS1" ]] &&
        [[ -z "$TMUX" ]] &&
        [[ -n "$SSH_CONNECTION" ]]; then

        ( tmux list-session 2>&1 | grep ssh ) && exec tmux attach-session -t ssh
        exec tmux new-session -s ssh
fi

CMD_EXE=/mnt/c/Windows/System32/cmd.exe

# WSL stuff.
if [[ -f $CMD_EXE ]]; then
        # I launch WSL by wsl.exe -d Arch -u root login -u ...
        # to make sure the settings in `pam_open_session` takes effect.
        #
        # But login will remove all environment variables setted by the WSL init.
        # So I have to launch another wsl shell to get them back.
        $CMD_EXE /C "wsl.exe -d Arch env" 2>/dev/null |
                # this while loop is generated by bing chat
                while read line; do
                        if [[ $line == PWD* ]]; then
                                continue
                        fi
                        export $line
                done
        # The WSL_INTEROP is a special environment variable.
        # We cannot get it back from another wsl shell.
        # Check link below for more information.
        # https://github.com/microsoft/WSL/issues/5065#issuecomment-682198412
        for i in $(pstree -np -s $$ | grep -o -E '[0-9]+'); do
                if [[ -e "/run/WSL/${i}_interop" ]]; then
                        export WSL_INTEROP=/run/WSL/${i}_interop
                fi
        done
fi

# I use fcitx5 to input chinese in vim by my plugin fcitx5-ui.nvim.
pidof fcitx5 &>/dev/null ||
        command -v fcitx5 &>/dev/null &&
                ( nohup fcitx5 --keep &>/dev/null & )

# Setup zinit
# NOTE: copy from https://github.com/zdharma-continuum/zinit#manual
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
[ ! -d $ZINIT_HOME ] && mkdir -p "$(dirname $ZINIT_HOME)"
[ ! -d $ZINIT_HOME/.git ] && git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
source "${ZINIT_HOME}/zinit.zsh"

zinit depth=1 light-mode for \
        atinit"[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh" \
                romkatv/powerlevel10k

# NOTE: copy from https://zdharma-continuum.github.io/zinit/wiki/Example-Minimal-Setup/
zinit wait lucid depth=1 light-mode for \
                agkozak/zsh-z \
        atinit"zicompinit; zicdreplay" \
                zdharma-continuum/fast-syntax-highlighting \
        atinit='ZSH_BASH_COMPLETIONS_FALLBACK_LAZYLOAD_DISABLE=true' \
                3v1n0/zsh-bash-completions-fallback \
        atload"_zsh_autosuggest_start" \
                zsh-users/zsh-autosuggestions \
        blockf atpull'zinit creinstall -q .' \
                zsh-users/zsh-completions \
                esc/conda-zsh-completion

bindkey -v

bindkey "^r" history-incremental-search-backward
bindkey -s '^g' "lazygit^M"
bindkey -s '^h' "^[[D"
bindkey -s '^j' "^[[B"
bindkey -s '^k' "^[[A"
bindkey -s '^l' "^[[C"

# For command completion in sudo ...
# This is just a workaround.
alias sudo="sudo "

alias ls="ls --color"
alias la="ls -la"
alias ra="ranger"

alias pkg_auto_remove="sudo pacman -Rcns \$(pacman -Qdtq)"
alias pkg_source="asp export"
alias yay="CC= CXX= CMAKE_C_COMPILER= CMAKE_CXX_COMPILER= CMAKE_GENERATOR= CMAKE_C_FLAGS= CMAKE_CXX_FLAGS= yay"

alias gst="git status"

alias cfg="chezmoi"

alias clang-format-all="find . -regex '.*\.\(cpp\|hpp\|cc\|cxx\|h\)' -exec clang-format -style=file -i {} \;"
alias cmake-buildj="cmake --build build -j $(($(nproc) - 1))"
alias getcpm="wget -O CPM.cmake https://github.com/cpm-cmake/CPM.cmake/releases/latest/download/CPM.cmake"

setopt autopushd pushdsilent pushdtohome
setopt pushdignoredups # Remove duplicate entries
setopt pushdminus # This reverts the +/- operators.

alias bk="popd"

alias R='cd "$(realpath "`pwd`")"'
alias s="dirs -v"

alias ghdash="LANG=en_US gh dash"

alias dbox="distrobox"

export GPG_TTY=$(tty)

R
