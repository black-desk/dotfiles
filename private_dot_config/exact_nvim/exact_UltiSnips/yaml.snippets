snippet autotag "github action for automatic create tag and release" b
name: Automatic create tag and release.
on:
  push:
    branches:
      - master

jobs:
  auto_tag:
    name: Automatic create new tag from tools/get_project_version.sh
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Run tools/get-project-version.sh
        id: get_project_version
        run: |
          echo version="$(./tools/get-project-version.sh)" >> $GITHUB_OUTPUT

      - name: Check if tag already exists
        id: check_tag
        run: |
          if git rev-parse "${{ steps.get_project_version.outputs.version }}" &>/dev/null; then
            echo existed=true >> $GITHUB_OUTPUT
          else
            echo existed=false >> $GITHUB_OUTPUT
          fi

      - name: Run autotag
        id: autotag
        if: steps.check_tag.outputs.existed == 'false'
        uses: anothrNick/github-tag-action@1.70.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          CUSTOM_TAG: ${{ steps.get_project_version.outputs.version }}
    outputs:
      new_tag: ${{ steps.autotag.outputs.new_tag }}

  auto_release:
    name: Automatic release for new tag
    runs-on: ubuntu-latest
    needs:
      - auto_tag
    steps:
      - name: Checkout repository
        if: needs.auto_tag.outputs.new_tag
        uses: actions/checkout@v4

      - name: Run tools/generate-release-assets.sh
        id: generate_release_assets
        if: needs.auto_tag.outputs.new_tag
        run: |
          ASSETS=$(tools/generate-release-assets.sh)
          echo assets="$ASSETS" >> $GITHUB_OUTPUT

      - name: Automatic release
        uses: marvinpinto/action-automatic-releases@latest
        if: needs.auto_tag.outputs.new_tag
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ needs.auto_tag.outputs.new_tag }}
          prerelease: false
          files: ${{ steps.generate_release_assets.outputs.assets }}
endsnippet

snippet autotag "github action for basic checks" b
name: Checks

on: [pull_request]

jobs:
  checks:
    name: Run black-desk/checks
    permissions:
      checks: write
      contents: read
      issues: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: black-desk/checks@master
  pass:
    name: Pass
    if: always()
    needs:
      - checks
    runs-on: ubuntu-latest
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
endsnippet


snippet autotag "github action for automatic pre-release" b
name: "Automatic pre-release"

on:
  push:
    tags:
      - "v*-*"

jobs:
  auto_pre_release:
    name: Automatic pre-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tools/generate-release-assets.sh
        id: generate_release_assets
        run: |
          ASSETS=$(tools/generate-release-assets.sh)
          echo assets="$ASSETS" >> $GITHUB_OUTPUT

      - name: Automatic pre-release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
          files: ${{ steps.generate_release_assets.outputs.assets }}
endsnippet
